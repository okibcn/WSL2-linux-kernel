name: WF Test

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Debug session enabled'
        required: false
        default: false
        type: boolean
  ## CONFIG ##############################################################################
jobs:
  job-config:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      cancel: ${{ steps.prebuild-checks.outputs.cancel }}
    defaults:
      run:
        shell: bash
    steps:
    - name: "PRE-BUILD CHECKS" 
      id: prebuild-checks
      run: |
        echo "cancel=false" >>  $GITHUB_OUTPUT

    - name: "‚úîÔ∏è ls"
      run: |
        pwd
        ls -als $(pwd)
        ls -als ~

    - name: "‚è¨ Checkout repository"
      if: steps.prebuild-checks.outputs.cancel != 'true'
      uses: actions/checkout@v4


    - name: "DETECT CONFIGS"
      id: set-matrix
      if: steps.prebuild-checks.outputs.cancel != 'true'
      shell: pwsh
      run: |
        $m=@{include = @()}
        (gci *.dif).baseName | % { $m.include+=@{config = $_} } 
        "MATRIX:"
        $m | ConvertTo-Json
        "MATRIX STRING:"
        "matrix=$(($m | ConvertTo-Json -compress) -replace '"','`"')"
        "matrix=$(($m | ConvertTo-Json -compress) -replace '"','`"')" >> $env:GITHUB_OUTPUT


    - name: "‚úîÔ∏è TEST matrix"
      if: steps.prebuild-checks.outputs.cancel != 'true'
      run: |
        echo "MATRIX:"
        echo ${{ steps.set-matrix.outputs.matrix }}
        echo "CANCEL:"
        echo ${{ steps.prebuild-checks.outputs.cancel }}

    - name: Set Cache
      uses: actions/cache@v3.3.1
      id: cache-sources
      with:
        path: ./*
        key: ${{ github.sha }}-repo


  ## BUILD ##############################################################################
  job-build:
    needs: [ job-config ]
    if: needs.job-config.outputs.cancel != 'true'
    name: "Build configuration ${{ matrix.config }}"
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ FromJson(needs.job-config.outputs.matrix) }}
        # config: ${{ FromJson(needs.job-config.outputs.configs) }}
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:

    - name: "‚úîÔ∏è ls"
      run: |
        pwd
        ls -als $(pwd)
        ls -als ~

    - name: Hit Cache
      uses: actions/cache@v3.3.1
      id: cache-sources
      with:
        key: ${{ github.sha }}-repo
        path: ./*

    - name: "‚úîÔ∏è ls"
      run: |
        pwd
        ls -als $(pwd)
        ls -als ~

    - name: "‚úîÔ∏è TEST matrix"
      run: |
        echo "MATRIX:"
        echo ${{ needs.job-config.outputs.matrix }}
        echo "CONFIG:"
        echo ${{ matrix.config }}
        echo "CANCEL:"
        echo ${{ needs.job-config.outputs.cancel }}
        echo "${{ matrix.config }}" >> WSL2kernel-${{ matrix.config }}

    - name: "üëç Upload Artifact"
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config }}
        path: |
          WSL2kernel-${{ matrix.config }}

    - name: Set Cache
      uses: actions/cache@v3.3.1
      id: cache-image
      with:
        key: ${{ github.sha }}-${{ matrix.config }}
        path: ./WSL2kernel-${{ matrix.config }}


  ## PUBLISH ##############################################################################
  job-publish:
    if: needs.job-config.outputs.cancel != 'true'
    needs:
    - job-config
    - job-build
    name: "Publish"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: "‚úîÔ∏è TEST matrix"
      run: |
        echo "MATRIX:"
        echo '${{ needs.job-config.outputs.matrix }}'
        echo '${{ needs.job-config.outputs.matrix }}' | jq . || true
        echo "CANCEL:"
        echo needs.job-config.outputs.cancel

    - name: Artifact downloader
      uses: actions/download-artifact@v3
      with:
        path: ./artifacts

    - uses: geekyeggo/delete-artifact@v2
      with:
          name: '*'

    - name: "‚úîÔ∏è list Caches"
      run: |
        curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/$GITHUB_REPOSITORY/actions/caches




    - name: "üîß Prepare debug session"
      if: github.event.inputs.debug_enabled == 'true'
      run: |
        sudo apt install zsh zsh-syntax-highlighting
        sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh
        sudo chmod +x /usr/local/bin/oh-my-posh
        wget -q https://github.com/okibcn/miniU/raw/main/Github_Linux/.nanorc -O ~/.nanorc
        wget -q https://github.com/okibcn/miniU/raw/main/Github_Linux/profile.sh -O ~/.zshrc
        cp /etc/bash.bashrc ~
        cat ~/.zshrc >> ~/bash.bashrc
        sudo cp ~/bash.bashrc /etc/bash.bashrc -f

    - name: "üêû Debug session"
      uses: mxschmitt/action-tmate@v3
      if: github.event.inputs.debug_enabled == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ## More info at https://til.simonwillison.net/github-actions/debug-tmate
        ##           or https://github.com/mxschmitt/action-tmate


    - uses: snnaplab/delete-branch-cache-action@v1

    - name: "‚úîÔ∏è list Caches"
      run: |
        curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/$GITHUB_REPOSITORY/actions/caches

    - name: "‚úîÔ∏è ls"
      run: |
        pwd
        ls -als $(pwd)
        ls -als ~
        ls -Rals ~/artifacts
        