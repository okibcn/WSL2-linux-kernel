name: Build Kernels

on:
  # schedule:
  #   - cron: '52 */3 * * *'
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Debug session enabled'
        required: false
        default: false
        type: boolean
      release:
        description: 'Delivery Channel'
        required: false
        default: 'Artifact'
        type: choice
        options:
          - "Artifact"
          - "Release"    

  ## CONFIG ##############################################################################
jobs:
  job-config:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      cancel: ${{ steps.prebuild-checks.outputs.cancel }}
    defaults:
      run:
        shell: bash
    steps:
    - name: "‚úîÔ∏è Pre-build checks"
      id: prebuild-checks
      run: |
        body="$(pwd)/body.txt"
        jsonFile="/home/runner/kernels.json"
        WSL_DATE="$( wget -qO- https://api.github.com/repos/microsoft/WSL2-Linux-Kernel/commits | jq '.[1].commit.committer.date' -r )"
        LAST_DATE="$( wget -qO- https://api.github.com/repos/$GITHUB_REPOSITORY/releases/latest | jq .published_at -r )" || LAST_DATE="2000.01.01T00:00:00Z"
        echo "The last WSL2 Kernel commit date is:  $WSL_DATE"
        echo "The last Release in this repo was on: $LAST_DATE"
        if [[ $WSL_DATE > $LAST_DATE ]]; then
            echo "NEW KERNEL SOURCE!!!!"
            echo "# KERNEL UPDATES" > $body
            echo >> $body
            wget -qO- https://api.github.com/repos/microsoft/WSL2-Linux-Kernel/releases/latest | jq .body -r >> $body
        fi
        if [[ "$GITHUB_EVENT_NAME" == "workflow_dispatch" ]]; then
            echo "NEW IMPROVEMENT!!!!"
            [ -f $body ] && echo >> $body
            echo "# IMPROVEMENTS" >> $body
            echo >> $body
        fi
        if [ -f $body ]; then
            echo "{}" | jq "\
              .commitDate |= \"${WSL_DATE}\" |\
              .buildDate |= \"$(TZ=UTC date +'%Y.%m.%dT%H:%M:%SZ')\"" > $jsonFile
            echo "cancel=false" >> $GITHUB_OUTPUT
        else
            echo "NOTHING NEW. CANCELLING ACTION..."
            echo "cancel=true"  >> $GITHUB_OUTPUT
        fi

    - name: "‚è¨ Download repository"
      if: ${{ steps.prebuild-checks.outputs.cancel }} != 'true'
      uses: actions/checkout@v3

    - name: "‚è¨ Download and Install Toolchain"
      if: ${{ steps.prebuild-checks.outputs.cancel }} != 'true'
      run: sudo apt -y install build-essential flex bison dwarves libssl-dev libelf-dev python3 bc jq aria2 p7zip-full

    - name: "‚è¨ Fetch latest WSL kernel source"
      if: ${{ steps.prebuild-checks.outputs.cancel }} != 'true'
      run: git clone --depth=1 https://github.com/microsoft/WSL2-Linux-Kernel.git kernel

    - name: "üîç Detect Configurations"
      id: set-matrix
      if: ${{ steps.prebuild-checks.outputs.cancel }} != 'true'
      shell: pwsh
      run: |
        $m=@{include = @()}
        (gci *.dif).baseName | % { $m.include+=@{config = $_} } 
        "matrix=$(($m | ConvertTo-Json -compress) -replace '"','`"')" >> $env:GITHUB_OUTPUT

    - name: "üì® Send repo to jobs"
      uses: actions/cache@v3.2.6
      id: cache-sources
      with:
        path: ./*
        key: ${{ github.sha }}-repo

    - name: "üì® Send release body"
      uses: actions/cache@v3.2.6
      id: cache-sources
      with:
        path: ./body.txt
        key: ${{ github.sha }}-body

    - name: "üîß Prepare debug session"
      if: github.event.inputs.debug_enabled == 'true'
      run: |
        sudo apt -y install zsh zsh-syntax-highlighting
        sudo wget https://github.com/JanDeDobbeleer/oh-my-posh/releases/latest/download/posh-linux-amd64 -O /usr/local/bin/oh-my-posh
        sudo chmod +x /usr/local/bin/oh-my-posh
        wget -q https://github.com/okibcn/miniU/raw/main/Github_Linux/.nanorc -O  ~/.nanorc
        wget -q https://github.com/okibcn/miniU/raw/main/Github_Linux/profile.sh -O  ~/profile.sh
        cp /etc/bash.bashrc ~
        cat ~/profile.sh >> ~/bash.bashrc
        sudo cp ~/bash.bashrc /etc/bash.bashrc -f
        cp ~/profile.sh ~/.zshrc

    - name: "üêû Debug session"
      uses: mxschmitt/action-tmate@v3
      if: github.event.inputs.debug_enabled == 'true'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ## More info at https://til.simonwillison.net/github-actions/debug-tmate
        ##           or https://github.com/mxschmitt/action-tmate

  ## BUILD ##############################################################################
  job-build:
    needs: [ job-config ]
    if: ${{ needs.job-config.outputs.cancel }} != 'true'
    name: "Build configuration ${{ matrix.config }}"
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ FromJson(needs.job-config.outputs.matrix) }}
        # config: ${{ FromJson(needs.job-config.outputs.configs) }}
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
    - name: "‚úîÔ∏è TEST matrix"
      run: |
        echo "MATRIX:"
        echo ${{ needs.job-config.outputs.matrix }}
        echo "CONFIG:"
        echo ${{ matrix.config }}
        echo "CANCEL:"
        echo ${{ needs.job-config.outputs.cancel }}
        echo "${{ matrix.config }}" >> WSL2kernel

    - name: "üëç Upload Artifact"
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config }}
        path: |
          WSL2kernel

  ## PUBLISH ##############################################################################
  job-publish:
    if: ${{ needs.job-config.outputs.cancel }} != 'true'
    needs:
    - job-config
    - job-build
    name: "Publish"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - name: "‚úîÔ∏è TEST matrix"
      run: |
        echo "MATRIX:"
        echo '${{ needs.job-config.outputs.matrix }}'
        echo '${{ needs.job-config.outputs.matrix }}' | jq . || true
        echo "CANCEL:"
        echo ${{ needs.job-config.outputs.cancel }}

    - name: Artifact downloader
      uses: actions/download-artifact@v3
      with:
        path: ~/artifacts

    - name: Delete Artifacts
      uses: jimschubert/delete-artifacts-action@v1

    - name: "‚úîÔ∏è TEST matrix"
      run: |
        pwd
        ls -als $(pwd)
        ls -als ~
        ls -Rals ~/artifacts
        